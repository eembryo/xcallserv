/*
 * @@@ LICENSE
 * Copyright (C) 2015, LG Electronics, All Right Reserved.
 * No part of this source code may be communicated, distributed, reproduced
 * or transmitted in any form or by any means, electronic or mechanical or
 * otherwise, for any purpose, without the prior written permission of
 * LG Electronics.
 * LICENSE @@@
 *
 * Design/Author : dhilipkumar.raman@lge.com, jinheung.tark@lge.com
 * Date : 24/02/2016
 *
 * <IHU TEM-XCALLSERVICE> Detailed note is as follows.
 *
 * This FIDL is for ...
 * 		1. Service Name = com.lge.xcallservice
 * 		2. Interface Name = com.lge.xcallservice.${interface}
 *
 */


package com.lge.xcallservice

interface testInterface {
	version {major 1 minor 0}

	method calling {
		in {
			String callInfo
			String callName
		}
		out {
			Boolean result
		}
	}

	method connected {
		out {
			Boolean result
		}
	}

	method end {
		out {
			Boolean result
		}
	}

	method unittest {
		in {
			String testName
			String param1
			String param2
		}
		out {
			Boolean result
		}
	}

	method sendErrInfoNotification {
		in {
			UInt32 errId
			String errMsg
		}
		out {
			Boolean result
		}
	}
}

interface CallFeature {
	version { major 1 minor 0}

	<**
		@description : Method to accept an incoming call or hangup the current call to TEM2
	**>
	method CallHandlingSetRequest {
		in {
			AssistCallAction action
			<** @description : OPTIONAL - If omitted with action=hangupCall, all ongoing calls will be hung up **>
			UInt32 callId
		}
		error {
			INVALID_PARAMETER
			INCORRECT_STATE
			INPROGRESS
			UNKNOWN
		}
	}

	/* The below is for Data Types  in this interface */
	enumeration AssistCallAction {
		<** @description : Used to accept a incoming call **>
		acceptCall	= 0
		<** @description : Used to decline a incoming call and to hangup an ongoing call **>
		hangupCall	= 1
	}

	<**
		@description : Method to request the X-Call activation to TEM2
	**>
	method ServiceActivationSetRequest {
		in {
			<** @description : Desired service **>
			OnCallService service
			<** @description : On or Off **>
			OnOffSetting action
		}

		error {
			INVALID_PARAMETER
			INCORRECT_STATE
			INPROGRESS
			UNKNOWN
		}
	}

	/* The below is for Data Types in this interface */
	enumeration OnCallService {
		<** @description : Set to Information Call **>
		InformationCall	= 2
	}

	enumeration OnOffSetting {
		offSetting	= 0
		onSetting	= 1
	}

	<**
		@description : Signal for call status updates and information
	**>

	broadcast callStatusQuery {
		out {
			<** @description : callId 0 to 255 - Id of the on going call **>
			UInt32 callId
			<** @description : callType - Type of the call **>
			CallTypeEnumeration callType
			<** @description : pState - call state string **>
			String pState
		}
	}

	enumeration CallTypeEnumeration {
		MinCallType = 0
		EmergencyCallType
		InformationCallType
		BreakDownCallType
		MaxCallType
	}

	<**
		@description : Signal for error information
	**>

	broadcast NotifyErrInfo {
		out {
			<** @description : error id **>
			UInt32 errId
			<** @description : error message **>
			String errMsg
		}
	}

}

<**
	@description : This Operation Interface is for com.lge.xcallservice.PremiumAudio
	The interface definition uses some basic data types, which are defined
	in a separate Franca IDL file (i.e., CommonTypes.fidl).

	Overview:
	Enables TEM2 to request handsfree sound through the IHU. IHU notifies the current status to TEM2
	At every start of the IP bus, IHU shall assume the value isRequested=FALSE
	Higher level handling of this operation (when to send, WFR timers, etc.) are specified in
	system SRD and SWRS documents, see referenced specifications.
**>
interface PremiumAudio {
	version {major 1 minor 0}

	<** @description : To request enabling for the audio streaming to IHU X-Call Audio Service **>
	method SetRequest {
		in {
			Boolean isRequested
		}
		out {
			AudioStatus premiumAudioStatus
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<** @description : To request the current status of IHU Premium Audio **>
	method Request {
		out {
			AudioStatus premiumAudioStatus
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Broadcating signal for this operation notification
		This notification event will be enabled or disabled by NotificationRequest method
	**>
	broadcast Notification {
		out {
			AudioStatus premiumAudioStatus
		}
	}

		<** @description : Generic status **>
	enumeration GenericOkStatus {
		unknown	= 0
		ok		= 1
		notOk 	= 2
	}

	<** @description : Used to indicate the status of a audio i/o(mic/speaker) system **>
	struct AudioStatus {
		GenericOkStatus micStatus
		GenericOkStatus speakerStatus
	}

}