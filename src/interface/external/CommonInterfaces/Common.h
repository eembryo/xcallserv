/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __COMMON_H__
#define __COMMON_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Common.Connman */

#define TYPE_COM_LGE_TEMIL_COMMON_CONNMAN (com_lge_temil_common_connman_get_type ())
#define COM_LGE_TEMIL_COMMON_CONNMAN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN, ComLgeTemilCommonConnman))
#define IS_COM_LGE_TEMIL_COMMON_CONNMAN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN))
#define COM_LGE_TEMIL_COMMON_CONNMAN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN, ComLgeTemilCommonConnmanIface))

struct _ComLgeTemilCommonConnman;
typedef struct _ComLgeTemilCommonConnman ComLgeTemilCommonConnman;
typedef struct _ComLgeTemilCommonConnmanIface ComLgeTemilCommonConnmanIface;

struct _ComLgeTemilCommonConnmanIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_set_temiface_state) (
    ComLgeTemilCommonConnman *object,
    GDBusMethodInvocation *invocation,
    guint arg_stateValue);

};

GType com_lge_temil_common_connman_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_common_connman_interface_info (void);
guint com_lge_temil_common_connman_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_common_connman_complete_set_temiface_state (
    ComLgeTemilCommonConnman *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void com_lge_temil_common_connman_call_set_temiface_state (
    ComLgeTemilCommonConnman *proxy,
    guint arg_stateValue,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_common_connman_call_set_temiface_state_finish (
    ComLgeTemilCommonConnman *proxy,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_common_connman_call_set_temiface_state_sync (
    ComLgeTemilCommonConnman *proxy,
    guint arg_stateValue,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY (com_lge_temil_common_connman_proxy_get_type ())
#define COM_LGE_TEMIL_COMMON_CONNMAN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY, ComLgeTemilCommonConnmanProxy))
#define COM_LGE_TEMIL_COMMON_CONNMAN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY, ComLgeTemilCommonConnmanProxyClass))
#define COM_LGE_TEMIL_COMMON_CONNMAN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY, ComLgeTemilCommonConnmanProxyClass))
#define IS_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY))
#define IS_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_PROXY))

typedef struct _ComLgeTemilCommonConnmanProxy ComLgeTemilCommonConnmanProxy;
typedef struct _ComLgeTemilCommonConnmanProxyClass ComLgeTemilCommonConnmanProxyClass;
typedef struct _ComLgeTemilCommonConnmanProxyPrivate ComLgeTemilCommonConnmanProxyPrivate;

struct _ComLgeTemilCommonConnmanProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilCommonConnmanProxyPrivate *priv;
};

struct _ComLgeTemilCommonConnmanProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_common_connman_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_common_connman_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilCommonConnman *com_lge_temil_common_connman_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilCommonConnman *com_lge_temil_common_connman_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_common_connman_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilCommonConnman *com_lge_temil_common_connman_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilCommonConnman *com_lge_temil_common_connman_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON (com_lge_temil_common_connman_skeleton_get_type ())
#define COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON, ComLgeTemilCommonConnmanSkeleton))
#define COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON, ComLgeTemilCommonConnmanSkeletonClass))
#define COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON, ComLgeTemilCommonConnmanSkeletonClass))
#define IS_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON))
#define IS_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_COMMON_CONNMAN_SKELETON))

typedef struct _ComLgeTemilCommonConnmanSkeleton ComLgeTemilCommonConnmanSkeleton;
typedef struct _ComLgeTemilCommonConnmanSkeletonClass ComLgeTemilCommonConnmanSkeletonClass;
typedef struct _ComLgeTemilCommonConnmanSkeletonPrivate ComLgeTemilCommonConnmanSkeletonPrivate;

struct _ComLgeTemilCommonConnmanSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilCommonConnmanSkeletonPrivate *priv;
};

struct _ComLgeTemilCommonConnmanSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_common_connman_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilCommonConnman *com_lge_temil_common_connman_skeleton_new (void);


G_END_DECLS

#endif /* __COMMON_H__ */
