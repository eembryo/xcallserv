/*
 * @@@ LICENSE
 * Copyright (C) 2015, LG Electronics, All Right Reserved.
 * No part of this source code may be communicated, distributed, reproduced
 * or transmitted in any form or by any means, electronic or mechanical or
 * otherwise, for any purpose, without the prior written permission of
 * LG Electronics.
 * LICENSE @@@
 *
 * Design/Author : jaewoon.kim@lge.com, sandeep.ankolekar@lge.com
 * Date : Jan. 21, 2016.
 * Modified : April 18, 2016.
 *
 * <IHU TEM-IL> Detailed note is as follows.
 *
 * This FIDL is for ...
 * 		1. Service Name = com.lge.temil
 * 		2. OBJ PATH = /com/lge/temil/Connectivity
 *      3. Interface Name = com.lge.temil.Connectivity.${interface}
 *
 * This FIDL is based on the below spec document :
 * CEVT, "SWRS IP COMMAND BUS MESSAGES," Document No. 8888260713 (DRAFT), Rev. 011, Vol. 01, 2015-12-18.
 * (Jaewoon KIM's Proposal Draft Version)
 */


package com.lge.temil.Connectivity

import com.lge.temil.CommonTypes.* from "CommonTypes.fidl"


/* SIMConnect is removed (CEVT-confirmed) */
//<**
//	@description : This Operation Interface is for com.lge.temil.Connectivity.SIMConnect
//	The interface definition uses some basic data types, which are defined
//	in a separate Franca IDL file (i.e., CommonTypes.fidl).
//
//	Overview:
//	Command to initiate or terminate the SIM IP connection to the external network.
//	The response will only indicate if the command has been accepted. The status of the
//	connection is sent in another operation.
//	This signal must implement the following specific WFR timerout. WFR timeout 2000 ms.
//	Note: The signal specific WFR timeout value must be adjustable in Local Config.
//**>
//interface SIMConnect {
//	version { major 1 minor 0}
//
//	<**
//		@description : Method to request the SIMConnect settings to TEM2 (Turn the router On or Off)
//	**>
//	method SetRequest {
//		in {
//			<** @description : Defined in Shared Elements **>
//			OnOffSetting onOff
//		}
//		out {
//			OnOffSetting onOffResult
//		}
//		error {
//			INVALID_PARAMETER
//			INPROGRESS
//			UNKNOWN
//		}
//	}
//
//	<**
//		@description : Method to request the status of the SIMConnect settings to TEM2 (Current setting)
//	**>
//	method Request {
//		out {
//			<** @description : Defined in Shared Elements **>
//			OnOffSetting onOff
//		}
//		error {
//			INVALID_PARAMETER
//			INPROGRESS
//			UNKNOWN
//		}
//	}
//}

<**
	@description : This Operation Interface is for com.lge.temil.Connectivity.SIMConnectionStatus
	The interface definition uses some basic data types, which are defined
	in a separate Franca IDL file (i.e., CommonTypes.fidl).

	Overview:
	Indicates the status of the SIM internet connection and the technology used (This gives
	an indication of the maximum data rate, although the userâ€™s subscription may also limit
	the maximum rate).
	This signal must implement the following specific WFR timerout. WFR timeout 2000 ms.
	Note: The signal specific WFR timeout value must be adjustable in Local Config.
**>
interface SIMConnectionStatus {
	version { major 1 minor 0}

	<**
		@description : Method to request the current status of the SIM Connection to TEM2 (Current setting)
	**>
	method Request {
		out {
			SIMConnectionStatus status
			WirelessTechnology technology
			SosStatus sosStatus
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Method to request whether the caller subscription for this operation notification is eabled or disabled
		@param : subscribed is the input parameter for subscription preference
	**>
	method NotificationRequest {
		in {
			Boolean subscribed
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Broadcating signal for this operation notification
		This notification event will be enabled or disabled by NotificationRequest method
	**>
	broadcast Notification {
		out {
			SIMConnectionStatus status
			WirelessTechnology technology
			SosStatus sosStatus
		}
	}

	/* The below is for Data Types  in this interface */
	enumeration SIMConnectionStatus {
		<** @description : Connected to home network **>
		connectedHome		= 0
		<** @description : Connected to a roaming network **>
		connectedRoaming	= 1
		<** @description : Trying to connect **>
		connecting			= 2
		<** @description : Not connected, not trying to connect **>
		disconnected		= 3
		<** @description : Not allowed to connect, due to e.g. roaming restrictions **>
		prohibited			= 4
	}

	enumeration WirelessTechnology {
		unknown	= 0
		gprs	= 1
		edge	= 2
		<** @description : Standard 3G 380kbps **>
		umts	= 10
		hsdpa	= 11
		hsupa	= 12
		lte		= 30
	}

	enumeration SosStatus {
		<** @description : SOS system is unknown (idle) service **>
		unknown			= 0
		<** @description : SOS system is limited service **>
		limited			= 1
		<** @description : SOS system is not available service **>
		nonAvailable	= 2
		<** @description : SOS system is available service **>
		available		= 3
	}
}

<**
	@description : This Operation Interface is for com.lge.temil.Connectivity.ConnectivityInhibition
	The interface definition uses some basic data types, which are defined
	in a separate Franca IDL file (i.e., CommonTypes.fidl).

	Overview:
	Indicates the status of Connectivity Inhibition.
	It shall be possible to inhibit all remote (connected) services and calendar related
	functions, e.g. pre-climatization, engine start, etc.
	This is initiated by IHU and the inhibit connectivity command is received over the IP-Link.
	The inhibition shall be active until deactivated by command from IHU over IP-Link.
	This signal must implement the following specific WFR timerout. WFR timeout 2000 ms.
	Note: The signal specific WFR timeout value must be adjustable in Local Config.
**>
interface ConnectivityInhibition {
	version { major 1 minor 0}

	<**
		@description : Method to set the Connectivity Inhibition to TEM2
	**>
	method SetRequest {
		in {
			<** @description : Return the result. TRUE means OK, FALSE means Not OK **>
			Boolean ConnectivityInhibition
		}
		out {
			<** @description : Return the result. TRUE means OK, FALSE means Not OK **>
			Boolean ConnectivityInhibitionResult
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Method to request the Connectivity Inhibition to TEM2
	**>
	method Request {
		out {
			<** @description : Return the result. TRUE means OK, FALSE means Not OK **>
			Boolean ConnectivityInhibitionResult
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Method to request whether the caller subscription for this operation notification is eabled or disabled
		@param : subscribed is the input parameter for subscription preference
	**>
	method NotificationRequest {
		in {
			Boolean subscribed
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Broadcating signal for this operation notification
		This notification event will be enabled or disabled by NotificationRequest method
	**>
	broadcast Notification {
		out {
			<** @description : Return the result. TRUE means OK, FALSE means Not OK **>
			Boolean ConnectivityInhibitionResult
		}
	}
}

<**
	@description : This Operation Interface is for com.lge.temil.Connectivity.FactoryDefaultRestore
	The interface definition uses some basic data types, which are defined
	in a separate Franca IDL file (i.e., CommonTypes.fidl).

	Overview:
	Purpose: To reset the server ECU to default factory settings.
	Description: IHU HMI provides a menu option to reset the whole infotainment system.
	When user chooses to reset infotainment system to factory default settings, IHU will
	delete all save data internally in IHU, and will send a signal to TEM2 to restore to default
	settings.
	Request (0x02): IHU HMI action generates requests for all server ECUs to reset to
	factory default settings
	Response (0x04): Server ECUs responds with success of this operation.
**>
interface FactoryDefaultRestore {
	version { major 1 minor 0}

	<**
		@description : Method to set the factory reset (restore) to TEM2
	**>
	method SetRequest {
		in {
			Boolean setRestoration
		}
		out {
			<** @description : Return the result. TRUE means OK, FALSE means Not OK **>
			Boolean restorationResult
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}
}

<**
	@description : This Operation Interface is for com.lge.temil.Connectivity.InternetGateway
	The interface definition uses some basic data types, which are defined
	in a separate Franca IDL file (i.e., CommonTypes.fidl).

	Overview:
	Purpose: To inform servers of which ECU that is the current gateway to Internet.
	Description: In order to route IP data to Internet addresses correct, IHU and TEM2
	need to know which ECU that is acting as gateway to Internet. The internet gateway can
	change due to user actions but also due to diagnostic and/or telematics services needs.
	Request (0x00): There is no identified need for this operation but it is included for future
	use.
	SetRequest (0x02): The client requests a server to set the internet gateway.
	Response (0x04): The servers respond with their view of current internet gateway.
**>
interface InternetGateway {
	version { major 1 minor 0}

	<**
		@description : Method to set servers of which ECU that is the current gateway to Internet
	**>
	method SetRequest {
		in {
			Ecu internetGateway
		}
		out {
			Ecu internetGatewayResult
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	<**
		@description : Method to inform servers of which ECU that is the current gateway to Internet
	**>
	method Request {
		out {
			Ecu internetGateway
		}
		error {
			INVALID_PARAMETER
			INPROGRESS
			UNKNOWN
		}
	}

	/* The below is for Data Types  in this interface */
	enumeration Ecu {
		<** @description : No ecu is acting as gateway **>
		none	= 0
		ihu		= 1
		TEM2	= 2
	}
}

