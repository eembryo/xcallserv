/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __CONNECTIVITY_H__
#define __CONNECTIVITY_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Connectivity.SIMConnectionStatus */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS (com_lge_temil_connectivity_simconnection_status_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS, ComLgeTemilConnectivitySIMConnectionStatus))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS))
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS, ComLgeTemilConnectivitySIMConnectionStatusIface))

struct _ComLgeTemilConnectivitySIMConnectionStatus;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatus ComLgeTemilConnectivitySIMConnectionStatus;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatusIface ComLgeTemilConnectivitySIMConnectionStatusIface;

struct _ComLgeTemilConnectivitySIMConnectionStatusIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_notification_request) (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_subscribed);

  gboolean (*handle_request) (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    GDBusMethodInvocation *invocation);

  void (*notification) (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    guint arg_status,
    guint arg_technology,
    guint arg_sosStatus);

};

GType com_lge_temil_connectivity_simconnection_status_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_connectivity_simconnection_status_interface_info (void);
guint com_lge_temil_connectivity_simconnection_status_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_connectivity_simconnection_status_complete_request (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    GDBusMethodInvocation *invocation,
    guint status,
    guint technology);

void com_lge_temil_connectivity_simconnection_status_complete_notification_request (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void com_lge_temil_connectivity_simconnection_status_emit_notification (
    ComLgeTemilConnectivitySIMConnectionStatus *object,
    guint arg_status,
    guint arg_technology);



/* D-Bus method calls: */
void com_lge_temil_connectivity_simconnection_status_call_request (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_simconnection_status_call_request_finish (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    guint *out_status,
    guint *out_technology,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_simconnection_status_call_request_sync (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    guint *out_status,
    guint *out_technology,
    GCancellable *cancellable,
    GError **error);

void com_lge_temil_connectivity_simconnection_status_call_notification_request (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_simconnection_status_call_notification_request_finish (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_simconnection_status_call_notification_request_sync (
    ComLgeTemilConnectivitySIMConnectionStatus *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY (com_lge_temil_connectivity_simconnection_status_proxy_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY, ComLgeTemilConnectivitySIMConnectionStatusProxy))
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY, ComLgeTemilConnectivitySIMConnectionStatusProxyClass))
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY, ComLgeTemilConnectivitySIMConnectionStatusProxyClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_PROXY))

typedef struct _ComLgeTemilConnectivitySIMConnectionStatusProxy ComLgeTemilConnectivitySIMConnectionStatusProxy;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatusProxyClass ComLgeTemilConnectivitySIMConnectionStatusProxyClass;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatusProxyPrivate ComLgeTemilConnectivitySIMConnectionStatusProxyPrivate;

struct _ComLgeTemilConnectivitySIMConnectionStatusProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilConnectivitySIMConnectionStatusProxyPrivate *priv;
};

struct _ComLgeTemilConnectivitySIMConnectionStatusProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_connectivity_simconnection_status_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_connectivity_simconnection_status_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivitySIMConnectionStatus *com_lge_temil_connectivity_simconnection_status_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivitySIMConnectionStatus *com_lge_temil_connectivity_simconnection_status_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_connectivity_simconnection_status_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivitySIMConnectionStatus *com_lge_temil_connectivity_simconnection_status_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivitySIMConnectionStatus *com_lge_temil_connectivity_simconnection_status_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON (com_lge_temil_connectivity_simconnection_status_skeleton_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON, ComLgeTemilConnectivitySIMConnectionStatusSkeleton))
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON, ComLgeTemilConnectivitySIMConnectionStatusSkeletonClass))
#define COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON, ComLgeTemilConnectivitySIMConnectionStatusSkeletonClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SIMCONNECTION_STATUS_SKELETON))

typedef struct _ComLgeTemilConnectivitySIMConnectionStatusSkeleton ComLgeTemilConnectivitySIMConnectionStatusSkeleton;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatusSkeletonClass ComLgeTemilConnectivitySIMConnectionStatusSkeletonClass;
typedef struct _ComLgeTemilConnectivitySIMConnectionStatusSkeletonPrivate ComLgeTemilConnectivitySIMConnectionStatusSkeletonPrivate;

struct _ComLgeTemilConnectivitySIMConnectionStatusSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilConnectivitySIMConnectionStatusSkeletonPrivate *priv;
};

struct _ComLgeTemilConnectivitySIMConnectionStatusSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_connectivity_simconnection_status_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilConnectivitySIMConnectionStatus *com_lge_temil_connectivity_simconnection_status_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Connectivity.SOSStatus */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS (com_lge_temil_connectivity_sosstatus_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS, ComLgeTemilConnectivitySOSStatus))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS))
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS, ComLgeTemilConnectivitySOSStatusIface))

struct _ComLgeTemilConnectivitySOSStatus;
typedef struct _ComLgeTemilConnectivitySOSStatus ComLgeTemilConnectivitySOSStatus;
typedef struct _ComLgeTemilConnectivitySOSStatusIface ComLgeTemilConnectivitySOSStatusIface;

struct _ComLgeTemilConnectivitySOSStatusIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_notification_request) (
    ComLgeTemilConnectivitySOSStatus *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_subscribed);

  gboolean (*handle_request) (
    ComLgeTemilConnectivitySOSStatus *object,
    GDBusMethodInvocation *invocation);

  void (*notification) (
    ComLgeTemilConnectivitySOSStatus *object,
    guint arg_status);

};

GType com_lge_temil_connectivity_sosstatus_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_connectivity_sosstatus_interface_info (void);
guint com_lge_temil_connectivity_sosstatus_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_connectivity_sosstatus_complete_request (
    ComLgeTemilConnectivitySOSStatus *object,
    GDBusMethodInvocation *invocation,
    guint status);

void com_lge_temil_connectivity_sosstatus_complete_notification_request (
    ComLgeTemilConnectivitySOSStatus *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void com_lge_temil_connectivity_sosstatus_emit_notification (
    ComLgeTemilConnectivitySOSStatus *object,
    guint arg_status);



/* D-Bus method calls: */
void com_lge_temil_connectivity_sosstatus_call_request (
    ComLgeTemilConnectivitySOSStatus *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_sosstatus_call_request_finish (
    ComLgeTemilConnectivitySOSStatus *proxy,
    guint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_sosstatus_call_request_sync (
    ComLgeTemilConnectivitySOSStatus *proxy,
    guint *out_status,
    GCancellable *cancellable,
    GError **error);

void com_lge_temil_connectivity_sosstatus_call_notification_request (
    ComLgeTemilConnectivitySOSStatus *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_sosstatus_call_notification_request_finish (
    ComLgeTemilConnectivitySOSStatus *proxy,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_sosstatus_call_notification_request_sync (
    ComLgeTemilConnectivitySOSStatus *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY (com_lge_temil_connectivity_sosstatus_proxy_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY, ComLgeTemilConnectivitySOSStatusProxy))
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY, ComLgeTemilConnectivitySOSStatusProxyClass))
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY, ComLgeTemilConnectivitySOSStatusProxyClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_PROXY))

typedef struct _ComLgeTemilConnectivitySOSStatusProxy ComLgeTemilConnectivitySOSStatusProxy;
typedef struct _ComLgeTemilConnectivitySOSStatusProxyClass ComLgeTemilConnectivitySOSStatusProxyClass;
typedef struct _ComLgeTemilConnectivitySOSStatusProxyPrivate ComLgeTemilConnectivitySOSStatusProxyPrivate;

struct _ComLgeTemilConnectivitySOSStatusProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilConnectivitySOSStatusProxyPrivate *priv;
};

struct _ComLgeTemilConnectivitySOSStatusProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_connectivity_sosstatus_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_connectivity_sosstatus_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivitySOSStatus *com_lge_temil_connectivity_sosstatus_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivitySOSStatus *com_lge_temil_connectivity_sosstatus_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_connectivity_sosstatus_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivitySOSStatus *com_lge_temil_connectivity_sosstatus_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivitySOSStatus *com_lge_temil_connectivity_sosstatus_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON (com_lge_temil_connectivity_sosstatus_skeleton_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON, ComLgeTemilConnectivitySOSStatusSkeleton))
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON, ComLgeTemilConnectivitySOSStatusSkeletonClass))
#define COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON, ComLgeTemilConnectivitySOSStatusSkeletonClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_SOSSTATUS_SKELETON))

typedef struct _ComLgeTemilConnectivitySOSStatusSkeleton ComLgeTemilConnectivitySOSStatusSkeleton;
typedef struct _ComLgeTemilConnectivitySOSStatusSkeletonClass ComLgeTemilConnectivitySOSStatusSkeletonClass;
typedef struct _ComLgeTemilConnectivitySOSStatusSkeletonPrivate ComLgeTemilConnectivitySOSStatusSkeletonPrivate;

struct _ComLgeTemilConnectivitySOSStatusSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilConnectivitySOSStatusSkeletonPrivate *priv;
};

struct _ComLgeTemilConnectivitySOSStatusSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_connectivity_sosstatus_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilConnectivitySOSStatus *com_lge_temil_connectivity_sosstatus_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Connectivity.ConnectivityInhibition */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION (com_lge_temil_connectivity_connectivity_inhibition_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION, ComLgeTemilConnectivityConnectivityInhibition))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION))
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION, ComLgeTemilConnectivityConnectivityInhibitionIface))

struct _ComLgeTemilConnectivityConnectivityInhibition;
typedef struct _ComLgeTemilConnectivityConnectivityInhibition ComLgeTemilConnectivityConnectivityInhibition;
typedef struct _ComLgeTemilConnectivityConnectivityInhibitionIface ComLgeTemilConnectivityConnectivityInhibitionIface;

struct _ComLgeTemilConnectivityConnectivityInhibitionIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_notification_request) (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_subscribed);

  gboolean (*handle_request) (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_set_request) (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_ConnectivityInhibition);

  void (*notification) (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    gboolean arg_ConnectivityInhibitionResult);

};

GType com_lge_temil_connectivity_connectivity_inhibition_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_connectivity_connectivity_inhibition_interface_info (void);
guint com_lge_temil_connectivity_connectivity_inhibition_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_connectivity_connectivity_inhibition_complete_set_request (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation,
    gboolean ConnectivityInhibitionResult);

void com_lge_temil_connectivity_connectivity_inhibition_complete_request (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation,
    gboolean ConnectivityInhibitionResult);

void com_lge_temil_connectivity_connectivity_inhibition_complete_notification_request (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void com_lge_temil_connectivity_connectivity_inhibition_emit_notification (
    ComLgeTemilConnectivityConnectivityInhibition *object,
    gboolean arg_ConnectivityInhibitionResult);



/* D-Bus method calls: */
void com_lge_temil_connectivity_connectivity_inhibition_call_set_request (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean arg_ConnectivityInhibition,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_set_request_finish (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean *out_ConnectivityInhibitionResult,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_set_request_sync (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean arg_ConnectivityInhibition,
    gboolean *out_ConnectivityInhibitionResult,
    GCancellable *cancellable,
    GError **error);

void com_lge_temil_connectivity_connectivity_inhibition_call_request (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_request_finish (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean *out_ConnectivityInhibitionResult,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_request_sync (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean *out_ConnectivityInhibitionResult,
    GCancellable *cancellable,
    GError **error);

void com_lge_temil_connectivity_connectivity_inhibition_call_notification_request (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_notification_request_finish (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_connectivity_inhibition_call_notification_request_sync (
    ComLgeTemilConnectivityConnectivityInhibition *proxy,
    gboolean arg_subscribed,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY (com_lge_temil_connectivity_connectivity_inhibition_proxy_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY, ComLgeTemilConnectivityConnectivityInhibitionProxy))
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY, ComLgeTemilConnectivityConnectivityInhibitionProxyClass))
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY, ComLgeTemilConnectivityConnectivityInhibitionProxyClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_PROXY))

typedef struct _ComLgeTemilConnectivityConnectivityInhibitionProxy ComLgeTemilConnectivityConnectivityInhibitionProxy;
typedef struct _ComLgeTemilConnectivityConnectivityInhibitionProxyClass ComLgeTemilConnectivityConnectivityInhibitionProxyClass;
typedef struct _ComLgeTemilConnectivityConnectivityInhibitionProxyPrivate ComLgeTemilConnectivityConnectivityInhibitionProxyPrivate;

struct _ComLgeTemilConnectivityConnectivityInhibitionProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilConnectivityConnectivityInhibitionProxyPrivate *priv;
};

struct _ComLgeTemilConnectivityConnectivityInhibitionProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_connectivity_connectivity_inhibition_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_connectivity_connectivity_inhibition_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityConnectivityInhibition *com_lge_temil_connectivity_connectivity_inhibition_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityConnectivityInhibition *com_lge_temil_connectivity_connectivity_inhibition_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_connectivity_connectivity_inhibition_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityConnectivityInhibition *com_lge_temil_connectivity_connectivity_inhibition_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityConnectivityInhibition *com_lge_temil_connectivity_connectivity_inhibition_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON (com_lge_temil_connectivity_connectivity_inhibition_skeleton_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON, ComLgeTemilConnectivityConnectivityInhibitionSkeleton))
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON, ComLgeTemilConnectivityConnectivityInhibitionSkeletonClass))
#define COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON, ComLgeTemilConnectivityConnectivityInhibitionSkeletonClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_CONNECTIVITY_INHIBITION_SKELETON))

typedef struct _ComLgeTemilConnectivityConnectivityInhibitionSkeleton ComLgeTemilConnectivityConnectivityInhibitionSkeleton;
typedef struct _ComLgeTemilConnectivityConnectivityInhibitionSkeletonClass ComLgeTemilConnectivityConnectivityInhibitionSkeletonClass;
typedef struct _ComLgeTemilConnectivityConnectivityInhibitionSkeletonPrivate ComLgeTemilConnectivityConnectivityInhibitionSkeletonPrivate;

struct _ComLgeTemilConnectivityConnectivityInhibitionSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilConnectivityConnectivityInhibitionSkeletonPrivate *priv;
};

struct _ComLgeTemilConnectivityConnectivityInhibitionSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_connectivity_connectivity_inhibition_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilConnectivityConnectivityInhibition *com_lge_temil_connectivity_connectivity_inhibition_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Connectivity.FactoryDefaultRestore */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE (com_lge_temil_connectivity_factory_default_restore_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE, ComLgeTemilConnectivityFactoryDefaultRestore))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE))
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE, ComLgeTemilConnectivityFactoryDefaultRestoreIface))

struct _ComLgeTemilConnectivityFactoryDefaultRestore;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestore ComLgeTemilConnectivityFactoryDefaultRestore;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreIface ComLgeTemilConnectivityFactoryDefaultRestoreIface;

struct _ComLgeTemilConnectivityFactoryDefaultRestoreIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_set_request) (
    ComLgeTemilConnectivityFactoryDefaultRestore *object,
    GDBusMethodInvocation *invocation,
    gboolean arg_setRestoration);

};

GType com_lge_temil_connectivity_factory_default_restore_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_connectivity_factory_default_restore_interface_info (void);
guint com_lge_temil_connectivity_factory_default_restore_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_connectivity_factory_default_restore_complete_set_request (
    ComLgeTemilConnectivityFactoryDefaultRestore *object,
    GDBusMethodInvocation *invocation,
    gboolean restorationResult);



/* D-Bus method calls: */
void com_lge_temil_connectivity_factory_default_restore_call_set_request (
    ComLgeTemilConnectivityFactoryDefaultRestore *proxy,
    gboolean arg_setRestoration,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_factory_default_restore_call_set_request_finish (
    ComLgeTemilConnectivityFactoryDefaultRestore *proxy,
    gboolean *out_restorationResult,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_factory_default_restore_call_set_request_sync (
    ComLgeTemilConnectivityFactoryDefaultRestore *proxy,
    gboolean arg_setRestoration,
    gboolean *out_restorationResult,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY (com_lge_temil_connectivity_factory_default_restore_proxy_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY, ComLgeTemilConnectivityFactoryDefaultRestoreProxy))
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY, ComLgeTemilConnectivityFactoryDefaultRestoreProxyClass))
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY, ComLgeTemilConnectivityFactoryDefaultRestoreProxyClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_PROXY))

typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreProxy ComLgeTemilConnectivityFactoryDefaultRestoreProxy;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreProxyClass ComLgeTemilConnectivityFactoryDefaultRestoreProxyClass;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreProxyPrivate ComLgeTemilConnectivityFactoryDefaultRestoreProxyPrivate;

struct _ComLgeTemilConnectivityFactoryDefaultRestoreProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilConnectivityFactoryDefaultRestoreProxyPrivate *priv;
};

struct _ComLgeTemilConnectivityFactoryDefaultRestoreProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_connectivity_factory_default_restore_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_connectivity_factory_default_restore_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityFactoryDefaultRestore *com_lge_temil_connectivity_factory_default_restore_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityFactoryDefaultRestore *com_lge_temil_connectivity_factory_default_restore_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_connectivity_factory_default_restore_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityFactoryDefaultRestore *com_lge_temil_connectivity_factory_default_restore_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityFactoryDefaultRestore *com_lge_temil_connectivity_factory_default_restore_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON (com_lge_temil_connectivity_factory_default_restore_skeleton_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON, ComLgeTemilConnectivityFactoryDefaultRestoreSkeleton))
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON, ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonClass))
#define COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON, ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_FACTORY_DEFAULT_RESTORE_SKELETON))

typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreSkeleton ComLgeTemilConnectivityFactoryDefaultRestoreSkeleton;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonClass ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonClass;
typedef struct _ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonPrivate ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonPrivate;

struct _ComLgeTemilConnectivityFactoryDefaultRestoreSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonPrivate *priv;
};

struct _ComLgeTemilConnectivityFactoryDefaultRestoreSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_connectivity_factory_default_restore_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilConnectivityFactoryDefaultRestore *com_lge_temil_connectivity_factory_default_restore_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.temil.Connectivity.InternetGateway */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY (com_lge_temil_connectivity_internet_gateway_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY, ComLgeTemilConnectivityInternetGateway))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY))
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY, ComLgeTemilConnectivityInternetGatewayIface))

struct _ComLgeTemilConnectivityInternetGateway;
typedef struct _ComLgeTemilConnectivityInternetGateway ComLgeTemilConnectivityInternetGateway;
typedef struct _ComLgeTemilConnectivityInternetGatewayIface ComLgeTemilConnectivityInternetGatewayIface;

struct _ComLgeTemilConnectivityInternetGatewayIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_request) (
    ComLgeTemilConnectivityInternetGateway *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_set_request) (
    ComLgeTemilConnectivityInternetGateway *object,
    GDBusMethodInvocation *invocation,
    guint arg_internetGateway);

};

GType com_lge_temil_connectivity_internet_gateway_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_temil_connectivity_internet_gateway_interface_info (void);
guint com_lge_temil_connectivity_internet_gateway_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_temil_connectivity_internet_gateway_complete_set_request (
    ComLgeTemilConnectivityInternetGateway *object,
    GDBusMethodInvocation *invocation,
    guint internetGatewayResult);

void com_lge_temil_connectivity_internet_gateway_complete_request (
    ComLgeTemilConnectivityInternetGateway *object,
    GDBusMethodInvocation *invocation,
    guint internetGateway);



/* D-Bus method calls: */
void com_lge_temil_connectivity_internet_gateway_call_set_request (
    ComLgeTemilConnectivityInternetGateway *proxy,
    guint arg_internetGateway,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_internet_gateway_call_set_request_finish (
    ComLgeTemilConnectivityInternetGateway *proxy,
    guint *out_internetGatewayResult,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_internet_gateway_call_set_request_sync (
    ComLgeTemilConnectivityInternetGateway *proxy,
    guint arg_internetGateway,
    guint *out_internetGatewayResult,
    GCancellable *cancellable,
    GError **error);

void com_lge_temil_connectivity_internet_gateway_call_request (
    ComLgeTemilConnectivityInternetGateway *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_temil_connectivity_internet_gateway_call_request_finish (
    ComLgeTemilConnectivityInternetGateway *proxy,
    guint *out_internetGateway,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_temil_connectivity_internet_gateway_call_request_sync (
    ComLgeTemilConnectivityInternetGateway *proxy,
    guint *out_internetGateway,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY (com_lge_temil_connectivity_internet_gateway_proxy_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY, ComLgeTemilConnectivityInternetGatewayProxy))
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY, ComLgeTemilConnectivityInternetGatewayProxyClass))
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY, ComLgeTemilConnectivityInternetGatewayProxyClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_PROXY))

typedef struct _ComLgeTemilConnectivityInternetGatewayProxy ComLgeTemilConnectivityInternetGatewayProxy;
typedef struct _ComLgeTemilConnectivityInternetGatewayProxyClass ComLgeTemilConnectivityInternetGatewayProxyClass;
typedef struct _ComLgeTemilConnectivityInternetGatewayProxyPrivate ComLgeTemilConnectivityInternetGatewayProxyPrivate;

struct _ComLgeTemilConnectivityInternetGatewayProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeTemilConnectivityInternetGatewayProxyPrivate *priv;
};

struct _ComLgeTemilConnectivityInternetGatewayProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_temil_connectivity_internet_gateway_proxy_get_type (void) G_GNUC_CONST;

void com_lge_temil_connectivity_internet_gateway_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityInternetGateway *com_lge_temil_connectivity_internet_gateway_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityInternetGateway *com_lge_temil_connectivity_internet_gateway_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_temil_connectivity_internet_gateway_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeTemilConnectivityInternetGateway *com_lge_temil_connectivity_internet_gateway_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeTemilConnectivityInternetGateway *com_lge_temil_connectivity_internet_gateway_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON (com_lge_temil_connectivity_internet_gateway_skeleton_get_type ())
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON, ComLgeTemilConnectivityInternetGatewaySkeleton))
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON, ComLgeTemilConnectivityInternetGatewaySkeletonClass))
#define COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON, ComLgeTemilConnectivityInternetGatewaySkeletonClass))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON))
#define IS_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_TEMIL_CONNECTIVITY_INTERNET_GATEWAY_SKELETON))

typedef struct _ComLgeTemilConnectivityInternetGatewaySkeleton ComLgeTemilConnectivityInternetGatewaySkeleton;
typedef struct _ComLgeTemilConnectivityInternetGatewaySkeletonClass ComLgeTemilConnectivityInternetGatewaySkeletonClass;
typedef struct _ComLgeTemilConnectivityInternetGatewaySkeletonPrivate ComLgeTemilConnectivityInternetGatewaySkeletonPrivate;

struct _ComLgeTemilConnectivityInternetGatewaySkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeTemilConnectivityInternetGatewaySkeletonPrivate *priv;
};

struct _ComLgeTemilConnectivityInternetGatewaySkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_temil_connectivity_internet_gateway_skeleton_get_type (void) G_GNUC_CONST;

ComLgeTemilConnectivityInternetGateway *com_lge_temil_connectivity_internet_gateway_skeleton_new (void);


G_END_DECLS

#endif /* __CONNECTIVITY_H__ */
