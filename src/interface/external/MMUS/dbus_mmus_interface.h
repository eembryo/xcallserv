/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __DBUS_MMUS_INTERFACE_H__
#define __DBUS_MMUS_INTERFACE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.car.micom.vddm */

#define TYPE_COM_LGE_CAR_MICOM_VDDM (com_lge_car_micom_vddm_get_type ())
#define COM_LGE_CAR_MICOM_VDDM(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_VDDM, ComLgeCarMicomVddm))
#define IS_COM_LGE_CAR_MICOM_VDDM(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_VDDM))
#define COM_LGE_CAR_MICOM_VDDM_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_CAR_MICOM_VDDM, ComLgeCarMicomVddmIface))

struct _ComLgeCarMicomVddm;
typedef struct _ComLgeCarMicomVddm ComLgeCarMicomVddm;
typedef struct _ComLgeCarMicomVddmIface ComLgeCarMicomVddmIface;

struct _ComLgeCarMicomVddmIface
{
  GTypeInterface parent_iface;

  void (*notify_gear_indcn_rec) (
    ComLgeCarMicomVddm *object,
    GVariant *arg_gearIndcnRec);

  void (*notify_whl_rot_tooth_cntr) (
    ComLgeCarMicomVddm *object,
    GVariant *arg_whlRotToothCntr);

};

GType com_lge_car_micom_vddm_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_car_micom_vddm_interface_info (void);
guint com_lge_car_micom_vddm_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus signal emissions functions: */
void com_lge_car_micom_vddm_emit_notify_gear_indcn_rec (
    ComLgeCarMicomVddm *object,
    GVariant *arg_gearIndcnRec);

void com_lge_car_micom_vddm_emit_notify_whl_rot_tooth_cntr (
    ComLgeCarMicomVddm *object,
    GVariant *arg_whlRotToothCntr);



/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY (com_lge_car_micom_vddm_proxy_get_type ())
#define COM_LGE_CAR_MICOM_VDDM_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY, ComLgeCarMicomVddmProxy))
#define COM_LGE_CAR_MICOM_VDDM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY, ComLgeCarMicomVddmProxyClass))
#define COM_LGE_CAR_MICOM_VDDM_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY, ComLgeCarMicomVddmProxyClass))
#define IS_COM_LGE_CAR_MICOM_VDDM_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY))
#define IS_COM_LGE_CAR_MICOM_VDDM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_VDDM_PROXY))

typedef struct _ComLgeCarMicomVddmProxy ComLgeCarMicomVddmProxy;
typedef struct _ComLgeCarMicomVddmProxyClass ComLgeCarMicomVddmProxyClass;
typedef struct _ComLgeCarMicomVddmProxyPrivate ComLgeCarMicomVddmProxyPrivate;

struct _ComLgeCarMicomVddmProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeCarMicomVddmProxyPrivate *priv;
};

struct _ComLgeCarMicomVddmProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_car_micom_vddm_proxy_get_type (void) G_GNUC_CONST;

void com_lge_car_micom_vddm_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomVddm *com_lge_car_micom_vddm_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomVddm *com_lge_car_micom_vddm_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_car_micom_vddm_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomVddm *com_lge_car_micom_vddm_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomVddm *com_lge_car_micom_vddm_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON (com_lge_car_micom_vddm_skeleton_get_type ())
#define COM_LGE_CAR_MICOM_VDDM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON, ComLgeCarMicomVddmSkeleton))
#define COM_LGE_CAR_MICOM_VDDM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON, ComLgeCarMicomVddmSkeletonClass))
#define COM_LGE_CAR_MICOM_VDDM_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON, ComLgeCarMicomVddmSkeletonClass))
#define IS_COM_LGE_CAR_MICOM_VDDM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON))
#define IS_COM_LGE_CAR_MICOM_VDDM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_VDDM_SKELETON))

typedef struct _ComLgeCarMicomVddmSkeleton ComLgeCarMicomVddmSkeleton;
typedef struct _ComLgeCarMicomVddmSkeletonClass ComLgeCarMicomVddmSkeletonClass;
typedef struct _ComLgeCarMicomVddmSkeletonPrivate ComLgeCarMicomVddmSkeletonPrivate;

struct _ComLgeCarMicomVddmSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeCarMicomVddmSkeletonPrivate *priv;
};

struct _ComLgeCarMicomVddmSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_car_micom_vddm_skeleton_get_type (void) G_GNUC_CONST;

ComLgeCarMicomVddm *com_lge_car_micom_vddm_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.car.micom.ihu */

#define TYPE_COM_LGE_CAR_MICOM_IHU (com_lge_car_micom_ihu_get_type ())
#define COM_LGE_CAR_MICOM_IHU(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_IHU, ComLgeCarMicomIhu))
#define IS_COM_LGE_CAR_MICOM_IHU(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_IHU))
#define COM_LGE_CAR_MICOM_IHU_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_CAR_MICOM_IHU, ComLgeCarMicomIhuIface))

struct _ComLgeCarMicomIhu;
typedef struct _ComLgeCarMicomIhu ComLgeCarMicomIhu;
typedef struct _ComLgeCarMicomIhuIface ComLgeCarMicomIhuIface;

struct _ComLgeCarMicomIhuIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_ask_sys_last_status) (
    ComLgeCarMicomIhu *object,
    GDBusMethodInvocation *invocation);

  void (*notify_car_ifstatus) (
    ComLgeCarMicomIhu *object,
    GVariant *arg_CarIFStatus);

};

GType com_lge_car_micom_ihu_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_car_micom_ihu_interface_info (void);
guint com_lge_car_micom_ihu_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void com_lge_car_micom_ihu_complete_ask_sys_last_status (
    ComLgeCarMicomIhu *object,
    GDBusMethodInvocation *invocation,
    GVariant *SysLastStatus);



/* D-Bus signal emissions functions: */
void com_lge_car_micom_ihu_emit_notify_car_ifstatus (
    ComLgeCarMicomIhu *object,
    GVariant *arg_CarIFStatus);



/* D-Bus method calls: */
void com_lge_car_micom_ihu_call_ask_sys_last_status (
    ComLgeCarMicomIhu *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean com_lge_car_micom_ihu_call_ask_sys_last_status_finish (
    ComLgeCarMicomIhu *proxy,
    GVariant **out_SysLastStatus,
    GAsyncResult *res,
    GError **error);

gboolean com_lge_car_micom_ihu_call_ask_sys_last_status_sync (
    ComLgeCarMicomIhu *proxy,
    GVariant **out_SysLastStatus,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_IHU_PROXY (com_lge_car_micom_ihu_proxy_get_type ())
#define COM_LGE_CAR_MICOM_IHU_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_IHU_PROXY, ComLgeCarMicomIhuProxy))
#define COM_LGE_CAR_MICOM_IHU_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_IHU_PROXY, ComLgeCarMicomIhuProxyClass))
#define COM_LGE_CAR_MICOM_IHU_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_IHU_PROXY, ComLgeCarMicomIhuProxyClass))
#define IS_COM_LGE_CAR_MICOM_IHU_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_IHU_PROXY))
#define IS_COM_LGE_CAR_MICOM_IHU_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_IHU_PROXY))

typedef struct _ComLgeCarMicomIhuProxy ComLgeCarMicomIhuProxy;
typedef struct _ComLgeCarMicomIhuProxyClass ComLgeCarMicomIhuProxyClass;
typedef struct _ComLgeCarMicomIhuProxyPrivate ComLgeCarMicomIhuProxyPrivate;

struct _ComLgeCarMicomIhuProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeCarMicomIhuProxyPrivate *priv;
};

struct _ComLgeCarMicomIhuProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_car_micom_ihu_proxy_get_type (void) G_GNUC_CONST;

void com_lge_car_micom_ihu_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomIhu *com_lge_car_micom_ihu_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomIhu *com_lge_car_micom_ihu_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_car_micom_ihu_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomIhu *com_lge_car_micom_ihu_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomIhu *com_lge_car_micom_ihu_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON (com_lge_car_micom_ihu_skeleton_get_type ())
#define COM_LGE_CAR_MICOM_IHU_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON, ComLgeCarMicomIhuSkeleton))
#define COM_LGE_CAR_MICOM_IHU_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON, ComLgeCarMicomIhuSkeletonClass))
#define COM_LGE_CAR_MICOM_IHU_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON, ComLgeCarMicomIhuSkeletonClass))
#define IS_COM_LGE_CAR_MICOM_IHU_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON))
#define IS_COM_LGE_CAR_MICOM_IHU_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_IHU_SKELETON))

typedef struct _ComLgeCarMicomIhuSkeleton ComLgeCarMicomIhuSkeleton;
typedef struct _ComLgeCarMicomIhuSkeletonClass ComLgeCarMicomIhuSkeletonClass;
typedef struct _ComLgeCarMicomIhuSkeletonPrivate ComLgeCarMicomIhuSkeletonPrivate;

struct _ComLgeCarMicomIhuSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeCarMicomIhuSkeletonPrivate *priv;
};

struct _ComLgeCarMicomIhuSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_car_micom_ihu_skeleton_get_type (void) G_GNUC_CONST;

ComLgeCarMicomIhu *com_lge_car_micom_ihu_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.lge.car.micom.cem */

#define TYPE_COM_LGE_CAR_MICOM_CEM (com_lge_car_micom_cem_get_type ())
#define COM_LGE_CAR_MICOM_CEM(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_CEM, ComLgeCarMicomCem))
#define IS_COM_LGE_CAR_MICOM_CEM(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_CEM))
#define COM_LGE_CAR_MICOM_CEM_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_COM_LGE_CAR_MICOM_CEM, ComLgeCarMicomCemIface))

struct _ComLgeCarMicomCem;
typedef struct _ComLgeCarMicomCem ComLgeCarMicomCem;
typedef struct _ComLgeCarMicomCemIface ComLgeCarMicomCemIface;

struct _ComLgeCarMicomCemIface
{
  GTypeInterface parent_iface;

  void (*notify_emgy_assc_sts) (
    ComLgeCarMicomCem *object,
    GVariant *arg_EmgyAsscSts);

  void (*notify_telm_sts) (
    ComLgeCarMicomCem *object,
    GVariant *arg_TelmSts);

};

GType com_lge_car_micom_cem_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *com_lge_car_micom_cem_interface_info (void);
guint com_lge_car_micom_cem_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus signal emissions functions: */
void com_lge_car_micom_cem_emit_notify_emgy_assc_sts (
    ComLgeCarMicomCem *object,
    GVariant *arg_EmgyAsscSts);

void com_lge_car_micom_cem_emit_notify_telm_sts (
    ComLgeCarMicomCem *object,
    GVariant *arg_TelmSts);



/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_CEM_PROXY (com_lge_car_micom_cem_proxy_get_type ())
#define COM_LGE_CAR_MICOM_CEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_CEM_PROXY, ComLgeCarMicomCemProxy))
#define COM_LGE_CAR_MICOM_CEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_CEM_PROXY, ComLgeCarMicomCemProxyClass))
#define COM_LGE_CAR_MICOM_CEM_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_CEM_PROXY, ComLgeCarMicomCemProxyClass))
#define IS_COM_LGE_CAR_MICOM_CEM_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_CEM_PROXY))
#define IS_COM_LGE_CAR_MICOM_CEM_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_CEM_PROXY))

typedef struct _ComLgeCarMicomCemProxy ComLgeCarMicomCemProxy;
typedef struct _ComLgeCarMicomCemProxyClass ComLgeCarMicomCemProxyClass;
typedef struct _ComLgeCarMicomCemProxyPrivate ComLgeCarMicomCemProxyPrivate;

struct _ComLgeCarMicomCemProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ComLgeCarMicomCemProxyPrivate *priv;
};

struct _ComLgeCarMicomCemProxyClass
{
  GDBusProxyClass parent_class;
};

GType com_lge_car_micom_cem_proxy_get_type (void) G_GNUC_CONST;

void com_lge_car_micom_cem_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomCem *com_lge_car_micom_cem_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomCem *com_lge_car_micom_cem_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void com_lge_car_micom_cem_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ComLgeCarMicomCem *com_lge_car_micom_cem_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ComLgeCarMicomCem *com_lge_car_micom_cem_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON (com_lge_car_micom_cem_skeleton_get_type ())
#define COM_LGE_CAR_MICOM_CEM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON, ComLgeCarMicomCemSkeleton))
#define COM_LGE_CAR_MICOM_CEM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON, ComLgeCarMicomCemSkeletonClass))
#define COM_LGE_CAR_MICOM_CEM_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON, ComLgeCarMicomCemSkeletonClass))
#define IS_COM_LGE_CAR_MICOM_CEM_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON))
#define IS_COM_LGE_CAR_MICOM_CEM_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_COM_LGE_CAR_MICOM_CEM_SKELETON))

typedef struct _ComLgeCarMicomCemSkeleton ComLgeCarMicomCemSkeleton;
typedef struct _ComLgeCarMicomCemSkeletonClass ComLgeCarMicomCemSkeletonClass;
typedef struct _ComLgeCarMicomCemSkeletonPrivate ComLgeCarMicomCemSkeletonPrivate;

struct _ComLgeCarMicomCemSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ComLgeCarMicomCemSkeletonPrivate *priv;
};

struct _ComLgeCarMicomCemSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType com_lge_car_micom_cem_skeleton_get_type (void) G_GNUC_CONST;

ComLgeCarMicomCem *com_lge_car_micom_cem_skeleton_new (void);


G_END_DECLS

#endif /* __DBUS_MMUS_INTERFACE_H__ */
